package com.koreait.restproject.rest.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.koreait.restproject.exception.BoardUpdateException;
import com.koreait.restproject.model.board.service.BoardService;
import com.koreait.restproject.model.domain.Board;
import com.sun.tools.sjavac.Log;

import lombok.extern.slf4j.Slf4j;

@RestController //Restfull한 URL을 이해하는 컨트롤러, 또한 @ResponseBody가 이미 처리된 컨트롤러
@Slf4j
public class BoardController {

	@Autowired
	private BoardService boardService;
	
	//목록 가져오기
	// reset/board
	@GetMapping("/board")//이미 ResponseBody가 적용된 상태이므로, 컨버터만 등록해놓았다면, List는
	//자동으로 Json으로 변환되어 클라이언트의 응답 정보로 사용됨
	public List<Board> getList() {
		List boardList  =boardService.selectAll();
		return boardList;
	}
	
	//한건 가져오기 요청
	
	//등록하기
	// rest/board
	@PostMapping("/board")
	//@RequestBody : 클라이언트가 전송한 json데이터를 자바의 객체로 변환(json을 java obj로)
	public ResponseEntity regist(@RequestBody Board board ) {
		log.debug("title : "+board.getTitle());
		log.debug("writer : "+board.getWriter());
		log.debug("content : "+board.getContent());
		
		boardService.regist(board);
		
		return ResponseEntity.ok().body(board);//body에 vo를 채워간다
	}
	
	//수정하기
	
	//삭제하기
	
	
	@ExceptionHandler(BoardUpdateException.class)
	public  handleException(BoardUpdateException e) {
		
		return null;
	}
}

